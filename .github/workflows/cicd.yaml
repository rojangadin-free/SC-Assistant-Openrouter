Continuous-Deployment:
  needs: Continuous-Integration
  runs-on: self-hosted
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Stop and remove old container
      run: |
        docker stop sc-assistant || true
        docker rm sc-assistant || true

    - name: Run Docker Image to serve users
      run: |
        docker run -d \
          --name sc-assistant \
          -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -e AWS_DEFAULT_REGION="${{ secrets.AWS_DEFAULT_REGION }}" \
          -e PINECONE_API_KEY="${{ secrets.PINECONE_API_KEY }}" \
          -e FIREBASE_WEB_API_KEY="${{ secrets.FIREBASE_WEB_API_KEY }}" \
          -e FIREBASE_KEY_JSON_B64="${{ secrets.FIREBASE_KEY_JSON_B64 }}" \
          -e OPENROUTER_API_KEY="${{ secrets.OPENROUTER_API_KEY }}" \
          -p 80:80 \
          ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPO }}:latest
